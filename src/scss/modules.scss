@use "variables";

.hero {
  display: grid;
  height: 100vh;
  gap: variables.$space-md;
  line-height: variables.$line-height-heading;
  place-content: center;
  place-items: center;

  & > * {
    width: min(80%, variables.$content-max-width);
  }

  &-title {
    font-size: variables.$font-size-md;
  }

  &-text {
    animation: hue-rotate 10s linear infinite alternate;
    background-clip: text;
    background-image:
      linear-gradient(
        to right,
        variables.$color-goldenrod,
        variables.$color-salmon,
        variables.$color-skyblue
      );
    color: transparent;
    font-size: variables.$font-size-xl;
    font-weight: 700;
  }

  &-cta {
    margin-top: 0;
    font-size: variables.$font-size-xs;
  }
}

.project {
  display: grid;
  gap: variables.$space-md;
  grid-template-columns: 1fr min(80%, variables.$content-max-width) 1fr;

  & + & {
    margin-top: variables.$space-xl;
  }

  &-summary {
    color: variables.$color-stone;
    font-size: variables.$font-size-xs;
    grid-column: 2 / 3;
  }

  &-title {
    width: fit-content;
    font-size: variables.$font-size-md;
    font-weight: 700;
    grid-column: 2 / 3;
    line-height: variables.$line-height-heading;

    @media (width >= 992px) {
      .project:nth-child(odd) & {
        justify-self: end;
      }
    }
  }

  &-image {
    width: 100%;
    height: 80vh;
    grid-column: 1 / -1;
    object-fit: cover;
    opacity: 0;
    scale: 0.95;
    transition:
      opacity 1s ease-in-out,
      scale 1s ease-in-out;

    &-visible {
      opacity: 1;
      scale: 1;
    }

    @media (width >= 992px) {
      grid-column: 1 / 3;
      transform-origin: left;

      .project:nth-child(even) & {
        grid-column: 2 / 4;
        transform-origin: right;
      }
    }
  }

  &-role {
    font-size: variables.$font-size-lg;
    grid-column: 2 / 3;
  }
}

.human-question {
  position: fixed;
  top: 50%;
  left: 50%;
  padding: variables.$space-md;
  translate: -50% -50%;

  &::backdrop {
    backdrop-filter: blur(20px);
  }

  select {
    font-size: smaller;
  }
}

.animation-paused {
  animation-play-state: paused;
}

@keyframes hue-rotate {
  to {
    filter: hue-rotate(1turn);
  }
}
